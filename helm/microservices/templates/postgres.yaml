{{- if .Values.postgresql.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace | default "default" }}
  labels:
    app: postgres
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        ports:
        - containerPort: 5432
          name: postgres
        env:
        {{- range $key, $val := .Values.postgresql.env }}
        - name: {{ $key }}
          value: {{ $val | quote }}
        {{- end }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        {{- if .Values.postgresql.persistence.enabled }}
        persistentVolumeClaim:
          claimName: postgres-data-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace | default "default" }}
  labels:
    app: postgres
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres
{{- if and .Values.postgresql.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
  namespace: {{ .Values.global.namespace | default "default" }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
{{- end }}
{{- end }}